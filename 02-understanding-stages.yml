# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: FirstJob
    steps:
    - bash: echo "Build FirstJob"
    - bash: echo $(PIPELINELEVELVARIABLE)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.SourcesDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: which nginx
    - bash: python3 --version
    - bash: which node
    - bash: which npm
    - bash: pwd
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.yml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
  # - job: SecondJob
  #   steps:
  #   - bash: echo "Build SecondJob"
# - stage: DevDeploy
#   variables:
#     environment: Dev
#   dependsOn: Build
#   jobs:
#   - job: DevDeployJob
#     steps:
#     - bash: echo "$(environment)DeployJob"
# - stage: QADeploy
#   variables:
#       environment: QA
#   dependsOn: Build
#   jobs:
#   - job: QADeployJob
#     steps:
#     - bash: echo "$(environment)Deploy Job"
# - stage: ProdDeploy
#   dependsOn:
#   - DevDeploy
#   - QADeploy
#   jobs:
#   - job: ProdDeployJob
#     steps:
#     - bash: echo "ProdDeploy Job"